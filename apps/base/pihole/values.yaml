# Default values for pihole.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- The number of replicas
replicaCount: 1

# -- The `spec.strategyTpye` for updates
strategyType: RollingUpdate

# -- The maximum number of Pods that can be created over the desired number of `ReplicaSet` during updating.
maxSurge: 1

# -- The maximum number of Pods that can be unavailable during updating
maxUnavailable: 1

# -- The number of old ReplicaSets to retain to allow rollback
revisionHistoryLimit: 10

image:
  # -- the repostory to pull the image from
  repository: "pihole/pihole"
  # -- the docker tag, if left empty it will get it from the chart's appVersion
  tag: ""
  # -- the pull policy
  pullPolicy: Always

dualStack:
  # -- set this to true to enable creation of DualStack services or creation of separate IPv6 services if `serviceDns.type` is set to `"LoadBalancer"`
  enabled: false

dnsHostPort:
  # -- set this to true to enable dnsHostPort
  enabled: false
  # -- default port for this pod
  port: 53

# -- Configuration for the DNS service on port 53
serviceDns:
  # -- deploys a mixed (TCP + UDP) Service instead of separate ones
  mixedService: true

  # -- `spec.type` for the DNS Service
  type: LoadBalancer

  # -- The port of the DNS service
  port: 53

  # -- Optional node port for the DNS service
  nodePort: ""

  # -- `spec.externalTrafficPolicy` for the DHCP Service
  externalTrafficPolicy: Local

  # -- A fixed `spec.loadBalancerIP` for the DNS Service
  loadBalancerIP: "10.1.9.2"
  # -- A fixed `spec.loadBalancerIP` for the IPv6 DNS Service
  loadBalancerIPv6: ""
  # -- `spec.loadBalancerClass` for the DNS Service. Only used if type is LoadBalancer.
  loadBalancerClass: ""

  # -- Annotations for the DNS service
  annotations:
    # metallb.universe.tf/address-pool: network-services
    metallb.io/allow-shared-ip: pihole-svc

  # -- Labels for the DNS service
  extraLabels: {}

# -- Configuration for the DHCP service on port 67
serviceDhcp:
  # -- Generate a Service resource for DHCP traffic
  enabled: false

  # -- `spec.type` for the DHCP Service
  type: LoadBalancer

  # -- The port of the DHCP service
  port: 67

  # -- Optional node port for the DHCP service
  nodePort: ""

  # -- `spec.externalTrafficPolicy` for the DHCP Service
  externalTrafficPolicy: Local

  # -- A fixed `spec.loadBalancerIP` for the DHCP Service
  loadBalancerIP: "10.1.9.2"
  # -- A fixed `spec.loadBalancerIP` for the IPv6 DHCP Service
  loadBalancerIPv6: ""
  # -- `spec.loadBalancerClass` for the DHCP Service. Only used if type is LoadBalancer.
  loadBalancerClass: ""

  # -- Annotations for the DHCP service
  annotations:
    # metallb.universe.tf/address-pool: network-services
    metallb.io/allow-shared-ip: pihole-svc

  # -- Labels for the DHCP service
  extraLabels: {}

# -- Configuration for the web interface service
serviceWeb:
  # -- Configuration for the HTTP web interface listener
  http:
    # -- Generate a service for HTTP traffic
    enabled: true

    # -- The port of the web HTTP service
    port: 80

    # -- Optional node port for the web HTTP service
    nodePort: ""

  # -- Configuration for the HTTPS web interface listener
  https:
    # -- Generate a service for HTTPS traffic
    enabled: true

    # -- The port of the web HTTPS service
    port: 443

    # -- Optional node port for the web HTTPS service
    nodePort: ""

  # -- `spec.type` for the web interface Service
  type: ClusterIP

  # -- `spec.externalTrafficPolicy` for the web interface Service
  externalTrafficPolicy: Local

  # -- A fixed `spec.loadBalancerIP` for the web interface Service
  loadBalancerIP: ""
  # -- A fixed `spec.loadBalancerIP` for the IPv6 web interface Service
  loadBalancerIPv6: ""
  # -- `spec.loadBalancerClass` for the web interface Service. Only used if type is LoadBalancer.
  loadBalancerClass: ""

  # -- Annotations for the DHCP service
  annotations:
    # metallb.io/address-pool: network-services
    metallb.io/allow-shared-ip: pihole-svc

virtualHost: pihole.home.thephysicsflat.xyz

# -- Configuration for the Ingress
ingress:
  # -- Generate a Ingress resource
  enabled: true

  # -- Specify an ingressClassName
  ingressClassName: nginx

  # -- Annotations for the ingress
  annotations:
    # kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt

    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
  path: /
  pathType: ImplementationSpecific
  hosts:
    # []
    # virtualHost (default value is pi.hole) will be appended to the hosts
    - pihole.home.thephysicsflat.xyz
  tls:
    - secretName: pihole-tls
      hosts:
        - pihole.home.thephysicsflat.xyz
        #- virtualHost (default value is pi.hole) will be appended to the hosts
        # - chart-example.local

# -- Probes configuration
probes:
  # -- probes.liveness -- Configure the healthcheck for the ingress controller
  liveness:
    # -- Generate a liveness probe
    # 'type' defaults to command, can be set to 'httpGet' to use a HTTP GET type liveness probe.
    type: command
    command:
      - /bin/sh
      - -c
      - "curl --silent http://localhost/api/info/login | jq 'if (.dns | not) then halt_error(1) end'"
    enabled: true
    # -- wait time before trying the liveness probe
    initialDelaySeconds: 60
    # -- threshold until the probe is considered failing
    failureThreshold: 10
    # -- timeout in seconds
    timeoutSeconds: 5
    # port: http
    # scheme: HTTP
  readiness:
    # -- Generate a readiness probe
    # 'type' defaults to command, can be set to 'httpGet' to use a HTTP GET type readiness probe.
    type: command
    command:
      - /bin/sh
      - -c
      - "curl --silent http://localhost/api/info/login | jq 'if (.dns | not) then halt_error(1) end'"
    enabled: true
    # -- wait time before trying the readiness probe
    initialDelaySeconds: 60
    # -- threshold until the probe is considered failing
    failureThreshold: 10
    # -- timeout in seconds
    timeoutSeconds: 5
    # port: http
    # scheme: HTTP

# -- We usually recommend not to specify default resources and to leave this as a conscious
# -- choice for the user. This also increases chances charts run on environments with little
# -- resources, such as Minikube. If you do want to specify resources, uncomment the following
# -- lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources:
  limits:
    cpu: 300m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

# -- `spec.PersitentVolumeClaim` configuration
persistentVolumeClaim:
  # -- set to true to use pvc
  enabled: true

  # -- specify an existing `PersistentVolumeClaim` to use
  # existingClaim: ""

  # -- Annotations for the `PersistentVolumeClaim`
  annotations: {}

  accessModes:
    - ReadWriteOnce

  # -- volume claim size
  size: "500Mi"

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: "nfs-client"

  ## If subPath is set mount a sub folder of a volume instead of the root of the volume.
  ## This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).

  ## subPath: "pihole"

# -- Node selector values
nodeSelector: {}

# -- Toleration
tolerations: []

# -- Specify a priorityClassName
# priorityClassName: ""

# Reference: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
topologySpreadConstraints: []
# - maxSkew: <integer>
#   topologyKey: <string>
#   whenUnsatisfiable: <string>
#   labelSelector: <object>

affinity: {}

# -- Use an existing secret for the admin password.
admin:
  # -- If set to false admin password will be disabled, adminPassword specified above and the pre-existing secret (if specified) will be ignored.
  enabled: true
  # -- Specify an existing secret to use as admin password
  existingSecret: "pihole-password"
  # -- Specify the key inside the secret to use
  passwordKey: "pihole-password"

# -- extraEnvironmentVars is a list of extra enviroment variables to set for pihole to use. You can use either scalars or project cm, secrets or pod fields via valueFrom
extraEnvVars:
  # issue 360
  FTLCONF_dns_listeningMode: "all"
  TZ: Europe/London
  # Project a variable
  # SOME_VAR:
  #   valueFrom:
  #     configMapKeyRef:
  #       key: some-var
  #       name: my-config-map

# -- extraEnvVarsSecret is a list of secrets to load in as environment variables.
extraEnvVarsSecret: {}
  # env_var:
  #   name: secret-name
  #   key: secret-key

# -- default upstream DNS 1 server to use
DNS1: "1.1.1.1"
# -- default upstream DNS 2 server to use
DNS2: "1.1.1.2"

antiaff:
  # -- set to true to enable antiaffinity (example: 2 pihole DNS in the same cluster)
  enabled: false
  # -- Here you can set the pihole release (you set in `helm install <releasename> ...`)
  # you want to avoid
  avoidRelease: pihole1
  # -- Here you can choose between preferred or required
  strict: true
  # -- Here you can pass namespaces to be part of those inclueded in anti-affinity
  namespaces: []

# -- DNS MASQ settings
dnsmasq:
  # -- Load custom user configuration files from /etc/dnsmasq.d
  enableCustomDnsMasq: true

  # -- Add upstream dns servers. All lines will be added to the pihole dnsmasq configuration
  upstreamServers: []
  # - server=/foo.bar/192.168.178.10
  # - server=/bar.foo/192.168.178.11

  # -- Add custom dns entries to override the dns resolution. All lines will be added to the pihole dnsmasq configuration.
  customDnsEntries: []
  # - address=/foo.bar/192.168.178.10
  # - address=/bar.foo/192.168.178.11

  # -- Dnsmasq reads the /etc/hosts file to resolve ips. You can add additional entries if you like
  additionalHostsEntries: []
  # - 192.168.0.3     host4
  # - 192.168.0.4     host5

  # -- Static DHCP config
  staticDhcpEntries: []
  # staticDhcpEntries:
  # - dhcp-host=MAC_ADDRESS,IP_ADDRESS,HOSTNAME

  # -- Other options
  customSettings:
  # otherSettings: |
  #   rebind-domain-ok=/plex.direct/

  # -- Here we specify custom cname entries that should point to `A` records or
  # elements in customDnsEntries array.
  # The format should be:
  #  - cname=cname.foo.bar,foo.bar
  #  - cname=cname.bar.foo,bar.foo
  #  - cname=cname record,dns record
  customCnameEntries: []
  # Here we specify custom cname entries that should point to `A` records or
  # elements in customDnsEntries array.
  # The format should be:
  #   - cname=cname.foo.bar,foo.bar
  #   - cname=cname.bar.foo,bar.foo
  #   - cname=cname record,dns record

# -- list of adlists to import during initial start of the container
adlists: {}
  # If you want to provide blocklists, add them here.
  # - https://hosts-file.net/grm.txt
  # - https://reddestdream.github.io/Projects/MinimalHosts/etc/MinimalHostsBlocker/minimalhosts

# -- list of whitelisted domains to import during initial start of the container
whitelist:
  # Contributed GoodnessJSON (https://github.com/GoodnessJSON)
  # Project home page: https://github.com/GoodnessJSON/PiHole-Whitelist
  # Forked from (with all thanks to AnudeepND): https://github.com/anudeepND/whitelist
  # Licence: https://github.com/GoodnessJSON/PiHole-Whitelist/blob/master/LICENSE

  # Existing
  - 0.client-channel.google.com
  - 1drv.com
  - 2.android.pool.ntp.org
  - akamaihd.net
  - akamaitechnologies.com
  - akamaized.net
  - amazonaws.com
  - android.clients.google.com
  - api.ipify.org
  - api.rlje.net
  - app-api.ted.com
  - appleid.apple.com
  - apps.skype.com
  - appsbackup-pa.clients6.google.com
  - appsbackup-pa.googleapis.com
  - aspnetcdn.com
  - attestation.xboxlive.com
  - ax.phobos.apple.com.edgesuite.net
  - brightcove.net
  - c.s-microsoft.com
  - cdn.cloudflare.net
  - cdn.embedly.com
  - cdn.optimizely.com
  - cdn.vidible.tv
  - cdn2.optimizely.com
  - cdn3.optimizely.com
  - cdnjs.cloudflare.com
  - cert.mgt.xboxlive.com
  - clientconfig.passport.net
  - clients*.google.com
  - cpms.spop10.ams.plex.bz
  - cpms35.spop10.ams.plex.bz
  - cse.google.com
  - ctldl.windowsupdate.com
  - d2c8v52ll5s99u.cloudfront.net
  - d2gatte9o95jao.cloudfront.net
  - dashboard.plex.tv
  - dataplicity.com
  - def-vef.xboxlive.com
  - delivery.vidible.tv
  - dev.virtualearth.net
  - device.auth.xboxlive.com
  - display.ugc.bazaarvoice.com
  - displaycatalog.mp.microsoft.com
  - dl.delivery.mp.microsoft.com
  - dl.dropbox.com
  - dl.dropboxusercontent.com
  - dns.msftncsi.com
  - download.sonarr.tv
  - drift.com
  - driftt.com
  - dynupdate.no-ip.com
  - ecn.dev.virtualearth.net
  - edge.api.brightcove.com
  - eds.xboxlive.com
  - fonts.gstatic.com
  - forums.sonarr.tv
  - g.live.com
  - geo-prod.do.dsp.mp.microsoft.com
  - geo3.ggpht.com
  - giphy.com
  - github.com
  - github.io
  - googleapis.com
  - gravatar.com
  - gstatic.com
  - help.ui.xboxlive.com
  - hls.ted.com
  - i.ytimg.com
  - i1.ytimg.com
  - imagesak.secureserver.net
  - img.vidible.tv
  - imgix.net
  - imgs.xkcd.com
  - instantmessaging-pa.googleapis.com
  - intercom.io
  - jquery.com
  - jsdelivr.net
  - keystone.mwbsys.com
  - lastfm-img2.akamaized.net
  - licensing.xboxlive.com
  - live.com
  - login.live.com
  - login.microsoftonline.com
  - manifest.googlevideo.com
  - meta-db-worker02.pop.ric.plex.bz
  - meta.plex.bz
  - meta.plex.tv
  - microsoftonline.com
  - msftncsi.com
  - my.plexapp.com
  - nexusrules.officeapps.live.com
  - npr-news.streaming.adswizz.com
  - nine.plugins.plexapp.com
  - no-ip.com
  - node.plexapp.com
  - notify.xboxlive.com
  - ns1.dropbox.com
  - ns2.dropbox.com
  - o1.email.plex.tv
  - o2.sg0.plex.tv
  - ocsp.apple.com
  - office.com
  - office.net
  - office365.com
  - officeclient.microsoft.com
  - om.cbsi.com
  - onedrive.live.com
  - outlook.live.com
  - outlook.office365.com
  - placehold.it
  - placeholdit.imgix.net
  - players.brightcove.net
  - pricelist.skype.com
  - products.office.com
  - proxy.plex.bz
  - proxy.plex.tv
  - proxy02.pop.ord.plex.bz
  - pubsub.plex.bz
  - pubsub.plex.tv
  - raw.githubusercontent.com
  - redirector.googlevideo.com
  - res.cloudinary.com
  - s.gateway.messenger.live.com
  - s.marketwatch.com
  - s.youtube.com
  - s.ytimg.com
  - s1.wp.com
  - s2.youtube.com
  - s3.amazonaws.com
  - sa.symcb.com
  - secure.avangate.com
  - secure.brightcove.com
  - secure.surveymonkey.com
  - services.sonarr.tv
  - skyhook.sonarr.tv
  - spclient.wg.spotify.com
  - ssl.p.jwpcdn.com
  - staging.plex.tv
  - status.plex.tv
  - t.co
  - t0.ssl.ak.dynamic.tiles.virtualearth.net
  - t0.ssl.ak.tiles.virtualearth.net
  - tawk.to
  - tedcdn.com
  - themoviedb.com
  - thetvdb.com
  - tinyurl.com
  - title.auth.xboxlive.com
  - title.mgt.xboxlive.com
  - traffic.libsyn.com
  - tvdb2.plex.tv
  - tvthemes.plexapp.com
  - twimg.com
  - ui.skype.com
  - video-stats.l.google.com
  - videos.vidible.tv
  - widget-cdn.rpxnow.com
  - win10.ipv6.microsoft.com
  - wp.com
  - ws.audioscrobbler.com
  - www.dataplicity.com
  - www.googleapis.com
  - www.msftncsi.com
  - www.no-ip.com
  - www.youtube-nocookie.com
  - xbox.ipv6.microsoft.com
  - xboxexperiencesprod.experimentation.xboxlive.com
  - xflight.xboxlive.com
  - xkms.xboxlive.com
  - xsts.auth.xboxlive.com
  - youtu.be
  - youtube-nocookie.com
  - yt3.ggpht.com
  - zee.cws.conviva.com
  - pings.conviva.com
  - cws.conviva.com
  - livepassdl.conviva.com
  - gfwsl.geforce.com
  - appspot-preview.l.google.com
  - vidtech.cbsinteractive.com
  - continuum.dds.microsoft.com
  - connectivitycheck.gstatic.com
  - connectivitycheck.android.com
  - www.msftconnecttest.com

  # German DYDNS Service
  - ipv64.net

  # Discord cdn#
  - cdn.discordapp.com

# -- list of blacklisted domains to import during initial start of the container
blacklist: {}
  # If you want to have special domains blacklisted, add them here
  # - *.blackist.com

# -- list of blacklisted regex expressions to import during initial start of the container
regex:
  # Add regular expression blacklist items
  # - (^|\.)facebook\.com$

# -- values that should be added to pihole-FTL.conf
ftl:
  # Add values for pihole-FTL.conf
  database_maxDBDays: 14
  # Project a variable
  # LOCAL_IPV4:
  #   valueFrom:
  #     fieldRef:
  #       fieldPath: status.podIP

# -- port the container should use to expose HTTP traffic
webHttp: "80"

# -- port the container should use to expose HTTPS traffic
webHttps: "443"

# -- hostname of pod
hostname: ""

# -- should the container use host network
hostNetwork: "false"

# -- should container run in privileged mode
privileged: "false"

customVolumes:
  # -- set this to true to enable custom volumes
  enabled: false
  # -- any volume type can be used here
  config: {}
    # hostPath:
    #   path: "/mnt/data"

# -- any extra volumes you might want
extraVolumes: {}
  # external-conf:
  #   configMap:
  #     name: pi-hole-lighttpd-external-conf

# -- any extra volume mounts you might want
extraVolumeMounts: {}
  # external-conf:
  #   mountPath: /etc/lighttpd/external.conf
  #   subPath: external.conf

extraContainers: []
  # - name: pihole-logwatcher
  #   image: your-registry/pihole-logwatcher
  #   imagePullPolicy: Always
  #   resources:
  #     requests:
  #       cpu: 100m
  #       memory: 5Mi
  #     limits:
  #       cpu: 100m
  #       memory: 5Mi
  #   volumeMounts:
  #   - name: pihole-logs
  #     mountPath: /var/log/pihole

# -- any extra kubernetes manifests you might want
extraObjects: []
  # - apiVersion: v1
  #   kind: ConfigMap
  #   metadata:
  #     name: pi-hole-lighttpd-external-conf
  #   data:
  #     external.conf: |
  #       $HTTP["host"] =~ "example.foo" {
  #         # If we're using a non-standard host for pihole, ensure the Pi-hole
  #         # Block Page knows that this is not a blocked domain
  #         setenv.add-environment = ("fqdn" => "true")
  #
  #         # Enable the SSL engine with a cert, only for this specific host
  #         $SERVER["socket"] == ":443" {
  #           ssl.engine = "enable"
  #           ssl.pemfile = "/etc/ssl/lighttpd-private/tls.crt"
  #           ssl.privkey = "/etc/ssl/lighttpd-private/tls.key"
  #           ssl.ca-file = "/etc/ssl/lighttpd-private/ca.crt"
  #           ssl.honor-cipher-order = "enable"
  #           ssl.cipher-list = "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH"
  #           ssl.use-sslv2 = "disable"
  #           ssl.use-sslv3 = "disable"
  #         }
  #       }
  #
  #       # Redirect HTTP to HTTPS
  #       $HTTP["scheme"] == "http" {
  #         $HTTP["host"] =~ ".*" {
  #           url.redirect = (".*" => "https://%0$0")
  #         }
  #       }

# -- Additional annotations for the deployment
deploymentAnnotations: {}
  # reloader.stakater.com/auto: "true"

# -- Additional annotations for pods
podAnnotations: {}
  # Example below allows Prometheus to scape on metric port (requires pihole-exporter sidecar enabled)
  # prometheus.io/port: '9617'
  # prometheus.io/scrape: 'true'

# -- any initContainers you might want to run before starting pihole
extraInitContainers: []
  # - name: copy-config
  #   image: busybox
  #   args:
  #     - sh
  #     - -c
  #     - |
  #       cp /etc/lighttpd-cm/external.conf /etc/lighttpd/
  #       ls -l /etc/lighttpd/
  #   volumeMounts:
  #     - name: external-conf-cm
  #       mountPath: /etc/lighttpd-cm/
  #     - name: external-conf
  #       mountPath: /etc/lighttpd/

monitoring:
  # -- Preferably adding prometheus scrape annotations rather than enabling podMonitor.
  podMonitor:
    # -- set this to true to enable podMonitor
    enabled: true
  # -- Sidecar configuration
  sidecar:
    # -- set this to true to enable podMonitor as sidecar
    enabled: true
    port: 9617
    image:
      # -- the repository to use
      repository: ekofr/pihole-exporter
      tag: v1.2.0
      pullPolicy: IfNotPresent
    resources:
      limits:
        memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

podDnsConfig:
  enabled: true
  policy: "None"
  nameservers:
    - 127.0.0.1
    - 8.8.8.8

# -- configure a Pod Disruption Budget
podDisruptionBudget:
  # -- set to true to enable creating the PDB
  enabled: true
  # -- minimum number of pods Kubernetes should try to have running at all times
  minAvailable: 1
  # -- maximum number of pods Kubernetes will allow to be unavailable. Cannot set both `minAvailable` and `maxAvailable`
  # maxUnavailable: 1

capabilities:
  add:
    - SYS_NICE
    - SYS_TIME
    - NET_BIND_SERVICE
    - CHOWN
    - NET_RAW
