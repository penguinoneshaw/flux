apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kanidm-data
spec:
  accessModes: ["ReadWriteOnce"]
  storageClassName: "nfs-client"
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kanidm
  namespace: kanidm
  labels:
    app.kubernetes.io/name: kanidm
    app.kubernetes.io/instance: kanidm-deployment
spec:
  selector:
    matchLabels:
      app: kanidm
  serviceName: kanidm
  replicas: 1
  template:
    metadata:
      labels:
        app: kanidm
    spec:
      containers:
        - name: kanidm
          image: docker.io/kanidm/server:1.6.4
          args: ["kanidmd", "server", "-c", "/config/server.toml"]
          securityContext:
            allowPrivilegeEscalation: false
          imagePullPolicy: Always
          livenessProbe:
            initialDelaySeconds: 60
            httpGet:
              port: web
              path: /status
              scheme: HTTPS
          readinessProbe:
            httpGet:
              port: web
              path: /status
              scheme: HTTPS
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
            - name: data
              mountPath: /data
            - name: tls
              mountPath: /tls
          resources:
            limits:
              memory: 1Gi
              cpu: 500m
            requests:
              memory: 300Mi
              cpu: 250m
          ports:
            - name: web
              containerPort: 8443
            - name: ldap
              containerPort: 3636

      volumes:
        - name: config
          configMap:
            name: kanidm
            defaultMode: 0660
        - name: tls
          secret:
            secretName: kanidm-ingress-tls
            defaultMode: 0660
        - name: data
          persistentVolumeClaim:
            claimName: kanidm-data

      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
        runAsUser: 1100
        runAsGroup: 1100
        fsGroup: 1100
        fsGroupChangePolicy: "OnRootMismatch"
        readOnlyRootFilesystem: true

---
apiVersion: v1
kind: Service
metadata:
  name: kanidm
  labels:
    app: kanidm
spec:
  type: ClusterIP
  selector:
    app: kanidm
  ports:
    - name: web
      port: 8443
      targetPort: web
    - name: ldaps
      port: 3636
      targetPort: ldap
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  name: kanidm
  labels:
    name: kanidm
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - idm.thephysicsflat.xyz
      secretName: kanidm-ingress-tls
  rules:
    - host: idm.thephysicsflat.xyz
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: kanidm
                port:
                  name: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radiusd
  namespace: kanidm
  labels:
    app.kubernetes.io/name: kanidm
    app.kubernetes.io/instance: kanidm-radiusd
spec:
  selector:
    matchLabels:
      app: radiusd
  template:
    metadata:
      labels:
        app: radiusd
    spec:
      containers:
        - name: radiusd
          image: docker.io/kanidm/radius:latest
          resources:
            requests:
              memory: "128Mi"
              cpu: "500m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 1812
              protocol: TCP
            - containerPort: 1812
              protocol: UDP

          volumeMounts:
            - name: radiusd-server-tls
              mountPath: /etc/raddb/certs/cert.pem
              subPath: tls.crt
              readOnly: true
            - name: radiusd-server-tls
              mountPath: /etc/raddb/certs/key.pem
              subPath: tls.key
              readOnly: true
            - name: radiusd-ca
              mountPath: /data/ca.pem
              subPath: tls.crt
              readOnly: true
            - name: radiusd-config
              mountPath: /data/radiusd.toml
              subPath: radiusd.toml
              readOnly: true
      volumes:
        - name: radiusd-server-tls
          secret:
            secretName: radiusd-server-tls
        - name: radiusd-ca
          secret:
            secretName: radiusd-ca
        - name: radiusd-config
          secret:
            secretName: radiusd-config
            items:
              - key: radiusd.toml
                path: radiusd.toml

---
apiVersion: v1
kind: Service
metadata:
  name: kanidm
spec:
  selector:
    app: kanidm
  type: LoadBalancer
  loadBalancerIP: 10.1.9.3
  ports:
    - port: 1812
      targetPort: 1812
      protocol: TCP
    - port: 1812
      targetPort: 1812
      protocol: UDP
